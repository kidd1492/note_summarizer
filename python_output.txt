
Analyzed Files:
C:/Users/chris/Desktop/test_flask\app.py

Imports:

from updated_notes import create_app

Analyzed Files:
C:/Users/chris/Desktop/test_flask\updated_notes\auth.py

Imports:

from functools import wraps
from flask import Blueprint, render_template, request, redirect, session
def login_required(f):
def decorated_function(*args, **kwargs):
def after_request(response):
def index():
def login():
def register():
def logout():
def dashboard():
def wiki():
def notes():
def edit():
def delete():
def search_notes():

Analyzed Files:
C:/Users/chris/Desktop/test_flask\updated_notes\helper.py

Imports:

from flask import render_template
import wikipedia as wk
def apology(message, code=400):
def escape(s):
def wiki_search(term):

Analyzed Files:
C:/Users/chris/Desktop/test_flask\updated_notes\models.py

Imports:

from sqlalchemy import func
class Note(db.Model):
class User(db.Model):

Analyzed Files:
C:/Users/chris/Desktop/test_flask\updated_notes\__init__.py

Imports:

from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_session import Session
def create_app():


Python Comments:
"""Ensure responses aren't cached"""
# Remember which user has logged in
"""Log user out"""
# Redirect user home page
"""Show all notes"""
# Render the edit.html template with the note data
# Commit the changes to the database
"""Show all notes"""
"""Render message as an apology to user."""
"""
"""
