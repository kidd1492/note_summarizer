Total Files Analyzed: 11
 
C:/Users/chris/Desktop/note_summarizer\main.py

[IMPORT]: from analyzers import PythonProjectAnalyzer, BaseAnalyzer, HTMLAnalyzer
[IMPORT]: import os, re
[FUNCTION]: def main():
[FUNCTION]: def get_directory():

''' ask user for filepath '''
[FUNCTION]: def gather_files(directory):

'''Gather all .py files in directory'''

# Skip .git directories entirely and enve

# Check if the file's extension is in the allowed list

#add to list for file types

#Uses BaseAnalyzer to get file types and decied what analizer to run
[FUNCTION]: def start_analyzer(all_file_paths, file_type_list):

#functions to call the analyzers
[FUNCTION]: def call_python_analyzer(all_file_paths):
[FUNCTION]: def call_html_analyzer(all_file_paths):
 
C:/Users/chris/Desktop/note_summarizer\tokenizer.py

[IMPORT]: import nltk
[IMPORT]: from nltk.tokenize import word_tokenize
[IMPORT]: from nltk.corpus import stopwords
[IMPORT]: from nltk.stem import WordNetLemmatizer
[IMPORT]: from nltk.probability import FreqDist

#Create object lemmatizer

# Example: Frequency-based summarization
 
C:/Users/chris/Desktop/note_summarizer\analyzers\base_analyzer.py

[IMPORT]: import os, re
[CLASS]: class BaseAnalyzer:
[FUNCTION]: def __init__(self, all_file_paths):

''' Initialize the analyzer with a target directory'''
[FUNCTION]: def file_count(self):
 
C:/Users/chris/Desktop/note_summarizer\analyzers\html_analyzer.py

[IMPORT]: from .base_analyzer import BaseAnalyzer
[IMPORT]: import re, os
[CLASS]: class HTMLAnalyzer(BaseAnalyzer):
[FUNCTION]: def __init__(self, all_file_paths):

''' Initialize the analyzer with a target directory'''
[FUNCTION]: def gather_html_files(self):
[FUNCTION]: def clean_file(self):

'''

'''
[FUNCTION]: def analyze(self):
 
C:/Users/chris/Desktop/note_summarizer\analyzers\python_analyzer.py

[IMPORT]: from .base_analyzer import BaseAnalyzer
[IMPORT]: import re
[CLASS]: class PythonProjectAnalyzer(BaseAnalyzer):
[FUNCTION]: def __init__(self, all_file_paths):

''' Initialize the analyzer with a file path list'''
[FUNCTION]: def gather_python_files(self):
[FUNCTION]: def clean_file(self, output):

"""Process files and write results directly to output."""
[FUNCTION]: def write_processed_line(self, output, line, file):

"""Write specific patterns directly to output file."""
[FUNCTION]: def analyze(self):

#Perform full analysis workflow
 
C:/Users/chris/Desktop/note_summarizer\analyzers\__init__.py

[IMPORT]: from .python_analyzer import PythonProjectAnalyzer
[IMPORT]: from .base_analyzer import BaseAnalyzer
[IMPORT]: from .html_analyzer import HTMLAnalyzer

Python Files Analyzed:6