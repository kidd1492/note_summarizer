
Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\main.py

Imports:

from analyzers import PythonProjectAnalyzer, BaseAnalyzer
import os, re
def main():
def get_directory():

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\output_file.txt

Imports:


Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\README.md

Imports:

import os, re
import inspect
def main():
def gather_files(directory, allowed_extensions):
def write_report(paths): ...

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\test.py

Imports:

from analyzers import BaseAnalyzer
import re, os

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\tokenizer.py

Imports:

import nltk

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\analyzers\base_analyzer.py

Imports:

import os, re
class BaseAnalyzer:
def __init__(self, directory):
def gather_files(self):

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\analyzers\python_analyzer.py

Imports:

import re, os
class PythonProjectAnalyzer(BaseAnalyzer):
def __init__(self, directory):
def gather_python_files(self):
def clean_file(self):
def gather_comments(self):
def write_files(self, out_file):
def write_functions(self, out_file):
def write_imports(self, out_file):
def write_comments(self, out_file):
def write_report(self, out_file):
def analize(self):
def full_report(self):
def summary_report(self):

Analyzed Files:
C:/Users/chris/Desktop/note_summarizer\analyzers\__init__.py

Imports:



Python Comments:
'''
'''
''' ask user for filepath '''
# File Summarizer Tool
## -Overview
## Features
## Current Project Structure
## output.txt
''' ask user for filepath '''
''' Initialize the analyzer with a target directory'''
'''Gather only Python (.py) files'''
"""gather all function decorators in files"""
'''gathers all import statements from files'''
## Next Steps
#Create object lemmatizer
# Example: Frequency-based summarization
''' Initialize the analyzer with a target directory'''
'''Gather all .py files in directory'''
# Skip .git directories entirely and enve
# Check if the file's extension is in the allowed list
''' Initialize the analyzer with a target directory'''
'''Gather only Python (.py) files'''
# Check if the file's extension is in the allowed list
'''
'''
'''TODO get better doc string
"""all file paths in project folder"""
"""gather all function decorators in files"""
'''gathers all import statements from files'''
'''funtion to get comments and docstring append to report'''
'''TODO write function for get classes
''' outputs all files, imports, def, comments'''
''''
'''
'''Full reort file, imports, functions for each file'''
